{"version":3,"sources":["components/Recipes.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipes","title","calories","image","ingredients","className","style","recipe","src","alt","map","ingredient","text","App","useState","recipes","setRecipes","search","setSearch","query","setquery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","event","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qRAoBeA,EAjBA,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,MAAMC,EAA+B,EAA/BA,SAASC,EAAsB,EAAtBA,MAAMC,EAAgB,EAAhBA,YAClC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACD,qBAAKI,UAAWC,IAAMH,MAAOK,IAAKL,EAAQM,IAAI,KAClD,6BAEQL,EAAYM,KAAI,SAAAC,GAAU,OACtB,6BAAKA,EAAWC,YAG5B,2CAAcV,SCqCXW,MA/Cf,WACE,IAIA,EAA4BC,mBAAS,IAArC,mBAAMC,EAAN,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAMG,EAAN,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,WAAjC,mBAAMK,EAAN,KAAYC,EAAZ,KACAC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAUMG,EAAU,uCAAE,8BAAAC,EAAA,sEACOC,MAAM,mCAAD,OAAoCL,EAApC,mBAtBhB,WAsBgB,oBArBd,qCAoBE,cACVM,EADU,gBAEGA,EAASC,OAFZ,OAEVC,EAFU,OAGhBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,GAJI,2CAAF,qDAOhB,OACE,sBAAKtB,UAAU,MAAf,UACE,uBAAM0B,SAdQ,SAACC,GACjBA,EAAMC,iBACNb,EAASH,GACTC,EAAU,KAWmBb,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAa6B,KAAK,SAASC,MAAOlB,EAAQmB,SApB1C,SAACJ,GACtBd,EAAUc,EAAMK,OAAOF,UAoBnB,wBAAQ9B,UAAU,gBAAgB6B,KAAK,SAAvC,uBAEF,qBAAK7B,UAAU,WAAf,SAEAU,EAAQL,KAAI,SAAAH,GAAM,OAChB,cAAC,EAAD,CAAmCN,MAAOM,EAAOA,OAAO+B,MAAOpC,SAAUK,EAAOA,OAAOL,SAAUC,MAAOI,EAAOA,OAAOJ,MACtHC,YAAeG,EAAOA,OAAOH,aADfG,EAAOA,OAAO+B,gBC9BrBC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBChBAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,SAAW,4B","file":"static/js/main.da5ad80c.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from '../recipe.module.css';\r\n\r\nconst Recipes =({title,calories,image,ingredients}) =>{\r\n    return(\r\n        <div className={style.recipe}>\r\n            <h1>{title}</h1>\r\n                <img className={style.image} src={image}  alt=\"\"/>\r\n            <ol>\r\n                {\r\n                    ingredients.map(ingredient=>(\r\n                        <li>{ingredient.text}</li>\r\n                    ))}\r\n            </ol>\r\n            <h4>Calories:{calories}</h4>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipes;","import React,{useEffect,useState} from 'react';\nimport './App.css';\nimport Recipes from './components/Recipes';\n\nfunction App() {\n  const APP_ID ='1ac1263f'\n  const APP_KEY = '0e07236f7f4b595d0d7b8d79c75dccce'\n  //const ExampleReq = `https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n  const[recipes,setRecipes] = useState([]);\n  const[search,setSearch] = useState('');\n  const[query,setquery] = useState('chicken');\n  useEffect(()=>{\n    getRecipes();\n  }, [query]); //it will on render when we hit the submit button\n\n  const onSearchChange = (event) =>{\n    setSearch(event.target.value);\n    //console.log(search);\n  }\n\n  const getsearch = (event) =>{\n    event.preventDefault();\n    setquery(search);\n    setSearch(''); //after hitting the submit button searchbox will be cleared\n  }\n  const getRecipes= async () =>{\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data);\n  };\n  //getRecipes();\n  return (\n    <div className=\"App\">\n      <form onSubmit={getsearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"search\" value={search} onChange={onSearchChange}/>\n        <button className=\"search-button\" type=\"submit\">Search</button>\n      </form>\n      <div className=\"recipies\">\n    {\n      recipes.map(recipe =>(\n        <Recipes key={recipe.recipe.label} title={recipe.recipe.label} calories={recipe.recipe.calories} image={recipe.recipe.image}\n        ingredients = {recipe.recipe.ingredients} />\n      ))\n    }\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport tachyons from 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__3o59c\",\"image\":\"recipe_image__2Idh3\",\"calories\":\"recipe_calories__1A90U\"};"],"sourceRoot":""}